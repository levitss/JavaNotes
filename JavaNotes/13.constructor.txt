1. 생성자(constructor)
    객체를 생성할 때만 호출하는 특수한 메서드
    new 연산자가 객체의 생성자를 이용하여 객체를 생성해 줌.
    생성자명은 클래스명과 같음.
    ssss sss=new ssss();
    메서드지만 반환형이 없음
    클래스 정의할때 생성자를 기술하지 않으면 매개변수 없는 생성자가 자동으로 만들어진다.Default constructor

    역할
        -속성(field)에 기본값을 주고 객체를 생성하고 싶은 경우
        객체가 생성될 때 변수나 상수를 초기화하거나 다른 초기화 기능을 수행하는 메서드를 호출함.

    대부분의 생성자는 외부에서 접근 가능하지만 (public) 필요에 의해 private으로 선언되는 경우도 있다.

    클래스에 생성자를 따로 구현하면 기본 생성자는 구현되지 않는다.
    생성자를 호출하는 코드에서 여러 생성자 중 필요에 따라 호출해서 사용할 수 있음.
    //this()?

2. 기본 생성자 (default constructor)
    1)생성자명이 클래스명과 같음
    2)메서드지만 반환형이 없음.
    3)매개변수 없음. ()
    4)특별히 수행하는 기능 없음 (구현부가 없음)
    5)프로그래머가 굳이 정의를 하지 않아도 컴파일러가 클래스 명만 보고 자동으로 만들어 준다.
    6)클래스에는 반드시 하나 이상의 생성자가 존재한다.
    7)클래스에 생성자를 구현하지 않아도 new키워드와 함께 생성자를 호출 할 수 있음.
    8)클래스에 따로 생성자를 구현할 경우 기본 생성자는 제공되지 않는다

3.생성자 만들기
    1)컴파일러가 제공해주는 기본 생성자외에 필요에 의해 생성자를 직접 구현할 수 있음.

4. 여러가지 생성자를 정의 : constructor overloading
    1)생성자를 호출하는 코드에서 여러 생성자중 필요에따라 호출해서 사용할 수 있음.
    2)오버로딩
        -매개변수 개수나 자료형은 다름
        -매서드 명은 같음.
        -리턴타입과 변수명은 상관없음.


        cf)overriding
            부모 클래스의 함수 재정의 change, modify
ss
