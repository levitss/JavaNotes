1. 자료구조
    1.배열[]
        크기가 고정되어있음. 같은 타입 제한
        새로 배열 만들어서 크기 변경 (string과 유사)
    2.리스트   
        
        연결 리스트
            원소가 다른 원소를 가리켜서 관리하는 자료구조
            원소의 물리적 저장 순서 ≠ 원소 논리적 순서, 
            데이터 추가, 삭제가 용이하다.
            data+link->data+link->data+link->null
            data+link  data+link->data+link->null
                    |    |
                   data+link
            데이터 추가시        

        스택 
        한쪽 끝에서만 자료를 넣거나 뺄 수 있는 구조
        선입후출
        Last In First Out
        push&pop
        python의 list.pop

        큐 Queue 
        선입선출 enqueue/dequeue front/rear

        트리구조
        루트노드 내부노드 단말노드로 구성됨

2.Collection Framework structure
    1. Iterable(반복)<-------collection<--------list<E>
                            |                    set<E>
                            -Map<K,V>

            list<E>
                동적인 배열 순서가 있음(인덱스)
                추가된 데이터의 순서도 유지 데이터 중복도 허용됨
                ArrayList(동기화 보장하지 않음)ㅏ, LinkedList,Stack,Queue,Vector(동기화 보장)
            set<E>
                순서없고 중복허용안됨
                hashset, sortedset->treeset

            Map<K,V>
            python의 dict
            key는 중복 허용하지 않는다
            hashmap(동기화 보장하지 않음),hashtable(동기화 보장),sortedmap, treemap