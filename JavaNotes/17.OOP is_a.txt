1.Class inheritance 클래스 상속 (is-a relation)
    1)새 클래스 정의할 때 이미 구현된 클래스를 상속받아서 속성이나 기능을 확장하여 클래스를 구현함
    2)이미 구현된 클래스보다 더 구체적인 기능을 가진 클래스를 구현해야할 때 기존 클래스를 상속함.
    3) 상위 혹은 부모 클래스의 속성과 기능은 그 하위 혹은 자식 클래스에 물려줄 수 있음.
    -상위의 특징을 그대로 다시 사용
    -하지만 부모는 사용 못함
    4)상위의 속성이나 기능은 하위에서 그냥 쓸 수 있으나 새로운 것으로 대체될 수 있음 override 
    5)하위 클래스에서는 새로운 속성이나 기능을 추가할 수 있음(확장)
    6)용어
        
        상위클래스:  parent class
                    base class
                    super class
                    ancestor

        하위클래스:  child class
                    derived class
                    sub class
                    descendant 
    7)상속의 문법
        class b extends a{}
        extends 키워드 뒤에는 단 하나의 클래스만 (단일상속 Single inheritance)

    8)상속을 구현하는 경우
        상위 클래스는 하위 클래스보다 더 일반적인 개념과 기능을 가짐
        하위 클래스는 상위 클래스보다 더 구체적인 개념과 기능을 가짐
    
    9)this와 super
        현재 사용 기준 클래스는 this 통해서 접근함
        상위 클래스는 super를 통해 접근함
    10)this(), super()
        자신의 또 다른 생성자를 호출, 부모의 다른 생성자를 호출

2. 상속을 활용한 클래스 구현

3. 상속에서 클래스 생성 과정 &형 변환
    1)하위 클래스의 객체가 생성되는 과정
        하위클래스를 생성하게 되면 상위 클래스가 먼저 생성이 됨(default로)
        
    2)super()
        하위 클래스에서 가지는 상위 클래스에 대한 참조 값.
        하위 클래스에서 명시적으로 상위 클래스의 생성자를 호출하지 않으면 자동으로 super()가 호출됨.
            상위 클래스의 기본생성자가 있어야 한다
        상위 클래스의 기본 생성자가 없는 경우(오버로드된 생성자가 있는 경우)
            super(k) 이용해서 상위 생성자 호출을 해야 함
    3)상속에서 인스턴스 메모리 상태
        상위 클래스의 인스턴스가 생성되고 하위 클래스의 인스턴스가 생성됨.

    4)형변환(업캐스팅)
        상위 클래스로 변수를 선언하고 하위 클래스의 생성자로 인스턴스를 생성.
        Customer co1=new Vip();
        상위 클래스 타입의 변수에 하위 클래스 변수가 대입
        int addCustomer()
        Vip vcustomer=new Vip();
        addCustomer(vcustomer)
        상위 클래스 메서드에 
        하위 클래스는 상위 클래스의 타입을 내포하고있기때문에 상위 클래스로의 자동 형변환이 가능
        상속 관계에서 모든 하위 클래스는 모든 상위 클래스로의 형변환(업캐스팅)이 가능하다. 역은 미성립(업캐스팅된것은 다운캐스팅 가능)
        서브 클래스의 멤버변수를 지니고있음 하지만 수퍼클래스라 접근이 안됨->다운캐스팅



4. 메서드 재정의하기 (overriding)
    1)하위 클래스에서 재정의
        상위 클래스에서 정의된 메서드의 구현 내용이 하위 클래스에서 구현할 내용과 맞지 않는 경우
        하위 클래스에서 동일한 이름의 메서드를 재정의
    2)어노테이션 annotation
        사전적 의미는 주석. 코드는 아니지만 프로그램에게 추가적인 정보를 제공해주는 메타데이터
        
        -컴파일러에게 코드 작성 문법 에러를 체크하도록 정보제공
        -소프트웨어 개발툴이 빌드나 배치시 코드를 자동으로 생성할 수 있도록 정보제공
        -실행시 특정 기능을 실행하도록 정보제공

        -@Override 재정의된 메서드라는 정보제공

        