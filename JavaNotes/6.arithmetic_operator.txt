1. 항과 연산자 
    항(operand) : 연산에 사용되는 값
    연산자(operator) : 항을 이용하여 연산하는 기호

2. 산술 연산자(arithmetic operator)
    +
    -
    *
    /
    % (나머지)
    
3. 대입 연산자 & 복합대입연산자 
    1)대입연산자(assignment operator)  
        '='
        -변수에 다른 변수나 값을 대입하는 연산자 
        -이항 연산자 중 가장 우선순위가 낮음
        -왼쪽 변수 = 오른쪽 변수(또는 식, 값)

    2)복합대입연산자 
        대입연산자와 다른 연산자가 함께 쓰이는 연산자
        a=a+b   a+=b
        a=a-b   a-=b
        a=a*b   a*=b
        a=a%b   a%=b
        a=a/b   a/=b

        int num1 = 7;
        num1 =num1-3;
        num1-=3;
        결과는 다 4

            코드가 간결해지는 장점.
        
        논리연산자
        <<=     왼쪽 시프트
        >>=     오른쪽 시프트   
        <<<=    부호에 상관없이 오른쪽 시프트
        &=      비트 and연산
        !=      비트 or연산
        ^=      비트 xor연산


4. 증감 연산자 (increment and decrement operators)
    단항연산자
    변수의 값을 1증가 or 1감소 시킬 때 사용함.
    연산자가 항의 앞에 있는가 뒤에 있는가에 따라 연산 시점과 결과가 다르다.
    
    부호연산자
        +x  부호유지(의미없음)
        -x  부호반전
    
    증감연산자
        ++x 먼저 피연산자의 값을 1 증가 후 해당 연산을 진행  
        x++ 연산을 수행 후 피연산자의 값을 1 증가
        --x
        x--

        y=x-- +5 + --x 일때
        y=(x-- +5) + --x
        x+5 연산 후 x--연산. 
        --x연산 후 [(x-- +5) + --x] 연산

5.비교연산자 (relational operator)
    이항연산자
    비교 후 결과값으로 True, False를 반환.
    조건문, 반복문의 조건문으로 자주 사용됨. (for i=0; i<1000; i=++i)
    왼쪽에서 오른쪽으로 결합
    ==  같으면 true. 
    !=  같지않으면 true.
    >
    >=
    <
    <=

6. 논리연산자 logical operator
    전제
        두 명제가 모두 참이면 논리곱은 참
        두 명제중 하나라도 참이면 논리합은 참
        참의 부정은 거짓, 거짓의 부정은 참

    관계연산자와 혼합하여 많이 사용함

    이항연산자
        && and 논리곱 
        || or  논리합
    
    단항연산자   
        ! not 부정  오른쪽에서 왼쪽으로 결합

    short circuit evaluation (SCE)
        -논리 연산에서 모든 항이 실행되지 않고 일부만 실행되는 경우
            논리곱(&&)은 무조건 두 항의 결과가 true일때만 true
                앞 항이 false일 경우 뒤 항의 결과를 평가(evaluation)하지 않음
            논리합||은 앞 항이 true일 결우.
        -eager evaluation vs lazy evaluation
            eager = &&, || 가 아닌 &,|만 넣을 경우 결과값의 여부와 상관없이 두 항을 연산한다.

7. 조건 연산자
    1)삼항연산자 (ternary operator)
    2)조건식이 참인 경우와 거짓인 경우에 다른 결과값
        if문을 간단히 표현할 때 사용.

    조건식 ? 반환값(참일때) : 반환값2(거짓일때)




8. 단항 이항 삼항 // unary, binary, ternary
    1)unary : ++y y--  !y  
    2)binary : 
    3)ternary : ?

9. 우선순위
    우선순위  
    1           .(점) []  ()
    2   단항   ++ -- + = !
    3   산술    * / %
    4   산술    + -
    5   비교    < <= > >=
    6   관계    == <= >= !=
    7   논리곱  &&  
    8   논리합  ||
    9   조건    booleanExpression ? exp1 : exp2
    10  대입    = += -= *= /= %=
    