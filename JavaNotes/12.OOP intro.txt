1. 1.객체와 클래스
        1)클래스는 객체(구체화 된 것)의 청사진.
        2)클래스는 객체를 프로그래밍에서 사용하려고 추상화해서 기술해놓은 설계도.
        3)프로그래밍에서 사용하려면 설계도를 기초로 실체를 만들 필요가 있음.
            -실체화 된 것을 객체(인스턴스)=메모리에 올라감
            -실체화 하는 작업을 객체(인스턴스)를 생선한다고 함.
        4) 클래스라는 설계도 대로 구현한 것을 메모리에 탑재해 메모리 주소를 부여한 것이 객체임.
           -객체는 클래스로부터 만들어지며 메모리를 차지함
           -최초에 만들어질 때는 자신을 초기화 하는 '생성자'를 가진다

        5)실제로 클래스를 객체로 만드는 코드
        
                        객체 생성
                          ___   ____생성자constructor  //생성자는 다양하게 있음
        Student myStudent=new Student();
        Student class가 myStudent(=참조변수)를 정의되는 타입이 된다.

        Student 클래스의 Student()생성자를 이용해 new해서 생성된 객체를 메모리에 적재(load)하고 변수 myStudent에 대입시킴.
        new 
            객체가 생성되면 그 객체는 참조형이 되어 동적메모리 할당 공간(Heap)에 내용을 사용할 수 있음.



/////////////////////////////////////////////////////////////////////
        String str = new String("자바");

 

라는 코드는

문자열을 처리하는 String 타입의 참조 변수를 선언하고 //class는 타입이 될 수 있음

이름이 str이라는 변수를 메모리 Stack영역에 4byte 크기의 저장공간을 생성한 후,

new라는 생성자를 이용해 String 참조 변수(객체)를 생성해

( )안에 있는 문자열 "자바"라는 값을 메모리 Heap영역 어딘가에 저장한 후,

그 저장공간의 주소 값을 Stack영역에 생성된 이름이 str이라는 공간에 저장하는 것이다.

/////////////////////////////////////////////////////////////////////



        
        6)this. 기본적으로 객체에 탑재되는 참조변수. 객체 자기자신의 주소
          super :            ""                   상속해준 조상객체의 주소

        7)instance
            -Class는 object의 property를 정의하고 기능을 구현하여 만들어놓은 코드상태
            실제 클래스 기반으로 생성된 객체(인스턴스)는 각각 다른 멤버 변수 값을 가지게 됨.
            new키워드를 사용하여 인스턴스 생성
            생성된 인스턴스는 heap(동적메모리)에 저장되고 stack에 주소값이 저장됨.
            자바에서 garbage collector(GC)가 주기적으로 사용되지 않는 객체가 할당되어있는 메모리를 수거함.
            하나의 클래스로부터 여러개의 인스턴스가 생성되고 각각 다른 메모리 주소를 가지게 됨.

2. 함수와 메서드
    1)함수_Function
        -하나의 기능을 수행하는 일련의 코드
        -구현된(정의된) 함수는 호출하여 사용하고 호출된 함수는 기능이 끝나면 제어가 반환됨.
        -함수로 구현된 하나의 기능은 여러 곳에서 동일한 방식으로 호출되어 사용될 수 있음.

    2)메서드(method)
        객체의 기능을 구현하기위해 클래스 내부에 구현되는 함수
        멤버 함수라고도 한다.
        메서드이름은 그 객체를 사용하는 객체(클라이언트)에 맞춰서 설정.
            ex)getStudentName(매개변수(parameter))
        
    2) overloading 
       하나의 클래스 내에 매개변수 개수나 자료형은 다르지만 메서드명은 같은 메서드를 여러개 정의.
       동일하거나 유사한 기능을 수행하는 메서드
       전달받는 매개변수에 따라 다른 연산을 하는 경우에 유용.
       print(int) print(boolean)


3. OOP 3가지 개념
    1)캡슐화(Encapsulation)
        정보를 하나로 묶어줌 (class=property+behavior)
    2)추상화(abstraction)
        -시스템의 세부사항중에서 중요한(관심있는) 것과 중요하지 않은 것(관심없는)을 가려내는 과정
    3)정보은폐(information hiding)
        사용자가 알 필요 없는 정보 은폐
    
4. 정보 은폐와 가시성
    1) -(private)나만 볼 수 있는거. //uml 표기
        같은 클래스 내에서 접근가능     
        접근 제한을 했더라도 해당 멤버 변수를 사용할 수 있는 메서드를 제공해서 프로그램 의도에 맞게 멤버 변수의 값을 사용하도록 유도할 수 있음.
        ->setter : private 멤버변수에 값을 대입하는 메서드.
          getter : 멤버변수의 값을 가져오는 메서드.
    +(public) 누구나 접근 가능 
        외부 클래스,외부 패키지에서 접근 가능
    #(protected) 부모와 자식에게만 접근 가능 
        상속관계의 클래스(다른 패키지에 속해있어도)에서만 접근가능
     default(아무것도 표시 안함) 같은 패키지 내에서 접근 가능
    public>protected>default>private


    2)setter()/getter() 메서드 //관용적인 네이밍
    -private로 선언된 멤버변수에 대해 접근, 수정할 수 있는 메서드를 public으로 제공
    같은 클래스에서는 접근 가능하니 클래스에 뒷문을 뚫어두는 것.
    get()만 제공하면 read only임

    3)oop에서 정보 은닉은 외부에 접근 가능한 최소한의 정보를 오픈함.





5. this 
    1)인스턴스 자신을 가리키는 참조 변수
    2)인스턴스의 주소가 저장되어있음
    3) 모든 클래스에 지역변수로 숨겨진 채로 존재함
    4)new라는 연산자가 heap에 인스턴스할때, 비로소 활성화가 이루어짐

    this()
    1)생성자에서 다른 생성자 호출
    2)같은 클래스 내에서 다른 생성자를 호출할 때 사용함
    3)다른 생성자 호출은 생성자의 첫 문자(맨 앞)에서 사용해야 함

5.? 변수의 자료형
    1)기본 primitive type: int long float double 등
    2)참조자료형 reference data type 
        -class type으로 변수를 선언    
        -기본 자료형은 사용하는 메모리의 크기가 정해져있음. 참조자료형은 클래스에 따라 다르다.
        -ex) db의 정규화와 같은 원리
            student class와 subject class를 분리하여 설계함.





6.? 객체간의 협력 collaboration
    
    1)참조 자료형으로 정의하여 사용하기
    ->
        학생
            -학생이 수강한 과목들에 대한 성적을 산출하기 위한 경우
            -학생과 과목에 대한 클래스를 분리하여 사용
            -subject 클래스를 활용하여 수강한 과목들의 변수 타입으로 선언
    
    2)oop에서의 협력
    -객체간에 협력이 이루어짐.
    -협력을 위해서는 필요한 메시지를 전송하고 이를 처리하는 기능이 구현되어야 함.
    -매개변수로 객체가 전달되는 경우가 발생.

    3) 시나리오
    -Lee 와 Shin 은 각각 버스와 지하철을 타고 학원에 감.
    -lee는 10000원 가지고 있고 버스비는 1250원
    -Shin 은 50000원 가지고 있고 지하철비는 1300원
    두 학생이 버스와 지하철을 타는 상황을 구현하시오
    
    4) 시나리오2
    jin은 지각하여 택시를 탔음.
    2만원 가지고 있음   만원을 택시비로 사용함.
    택시는 '이젠 운수'
    -진도준님의 남은 돈은 10000원 입니다.
    -이젠 운수택시 수입은 10000원 입니다.
