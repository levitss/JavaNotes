1. 자바 기본 자료형 (primitive data type, 8개)
    (자바는 syntax에 깐깐해서 자동변화 안됨)

            정수형  실수형  문자형  논리형
    1바이트 Byte                    boolean         2^7     
    2바이트 short           char                    2^15
    4바이트 Int     float                           2^31
    8바이트 long    double                          2^63

    래핑클래스때문에 Byte와 byte는 별개의 형태..?
그 외는 참조형



정수형
        1byte   Byte    2^8     -2^7~2^7-1   -1은 0  -128~127
        2byte   short   2^16    -2^15~2^15-1         32767
        4byte   int     2^32    -2^31~2^31-1        -2147483648 ~ 2147483647
        8byte   long    2^64    -2^63~2^63-1         +-9223372036854775807

    byte 
        동영상 음악 실행파일 자료 처리때
    short
        c/c++언어와 호환시 사용
    Int
        자바에서 사용하는 정수에 대한 기본 자료형
        프로그램에서 사용하는 모든 숫자는 int로 저장됨
    long
        숫자 뒤에 알파벳 L,l 입력해서 long 표시를 해야 함 (int가 default라서)

문자형
        2byte   char     
    
    예) char a = 'a'
   
    유니코드    char b = '\u0061';
    아스키코드  char c = 97;
        bin, hex, oct 등등으로도 입력이 가능
            바이너리    char d = 0b0000000001000001;
            hex         char e = 0x41;
            oct         int f = 023;
    
        encoding 문자가 숫자로 변환되는 것
        decoding 숫자가 문자로 변환되는 것
    문자 char 와 문자열 string

        문자세트(character set)
        -문자를 숫자로 변환한 값의 세트
        -각 문자를 얼마로 표현할 것인지 코드값을 모아둠
            ASCII American standard code for infomation interchange
                데이터 처리 및 통신 시스템 상호간의 정보교환용 표준코드/ 전 세계 표준 
                알파벳, 숫자, 특수문자 사용 가능. 1byte (한국은 2~3byte)
    
            Unicode
                -전 세계 언어를 하나의 코드로 통합하려는 업체들간의 협의로 만들어짐
                -utf-8(bit) 1byte에서 4byte까지 다양하게 표현할 수 있는 표준형
                -utf-16     2byte로 문자를 표현

논리형 
    boolean     1byte

    True, False 두 값만을 가진다
    값이 존재하는지, 배열이 비었는지, 결과가 참인지 거짓인지


실수형 (부동(float)소수점 방식, 고정소수점)
    정수보다 정밀하기 때문에 정수와는 다른방법으로 표현해야 함.
    
    2진기수법
    정수부에선 10진수를 2로 나눠가면서 1이나 0을 뽑았다면 소수부는 10진수에 2를 곱해가면서 1이나 0을 뽑아낸다. 그리고 정수부 변환할 때는 1이 나오면 종료했다면 여기서는 0이 나오면 종료하고, 결과를 밑에서부터가 아니라 위에서부터 읽어준다.
    0.625 * 2 = 1.25 -> 1을 빼내고 나머지 0.25
    0.25 * 2 = 0.5 -> 0을 빼내고 나머지 0.5
    0.5 * 2 = 1.0 -> 1을 빼내고 나머지 0
    0.625==0.101




    float   4byte
    double  8byte

        고정소수점(fixed point) 방식
            1bit는 부호 정수부 15bit 나머지 16bit는 소수 // 전체 32bit
            0000 0111 1010 0000
            필요 비트 수에 비해서 정밀도가 낮음

        
        부동소수점(floating point)방식
                가수   지수
            0.1=1.0*10^-1  ===>정규화라고 함 normalization

                정규화
                    2진화된 111.101를 1.11101 * 2^2


                IEEE float형 부동소수점 방식 32bit
                1bit 8bit 23bit
                부호, 지수부, 가수부

                IEEE double형 부동소수점 방식  64bit
                1bit 11bit   52bit
                부호, 지수부, 가수부
            
                IEEE 754 표준에 따르면 지수부에 값을 넣기전에 bias라는 지정된 숫자를 더해야 함.
                32비트 경우 bias=127
                1.01*2^n 일때 n+127   ->이유. 지수가 -의 값일 경우를 위해서 0~127은 음수, 128~255는 양수
                64비트는 bias 1023


            실수를 가지고 수행하는 모든 연산에는 언제나 작은 오차가 존재한다. 
                메모리 오류==2진화 과정에 무한소수가 되어버리는데 메모리에는 한계가 있어서 일부가 잘려버린다.
                ex) 1e-6~9 를 더한 뒤 캐스팅 
                    정수형 변수만을 사용하는 법 ex) scanf("%d.%d") -> printf("%d.%02d",a/100,a%100)
                    또는 반올림.


            자바는 double을 default실수형으로 사용



Wrapper Class

종종 메소드의 인수로 객체타입이 요구될 경우가 있는데 이 경우 primitive data는 사용할 수 없으니 객체로 변환 후 사용해야 한다.
객체로 변환을 Boxing이라고 함.

int=Integer 
char=character

등등



6. 지역변수
    local variable type
    자료형없이 사용하기 (Java10부터 지원)
    값을 보고 inference(추론)가능한 경우 선언하지 않음.
    한번 선언하여 추론이 된 변수에는 다른 타입의 값을 할당할 수는 없다.
    지역변수만 사용 가능.

    

