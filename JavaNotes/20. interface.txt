Interface
    모든 메서드가 추상메서드로 선언됨
        public abstract 생략됨
    모든 변수는 상수
        public static final 생략됨
    Interface 인터페이스 이름 {
        public void makeSome();
        public float pi=3.14f;
    }    

    java8부터
        default 메서드 static 메서드 등 일부 구현 코드가 제공 됨
        
2. 인터페이스 구현
    implements 예약어를 이용하여 구현
        class B extends A implements C{}
    인터페이스는 다중 구현이 가능 (상속과는 다르게)
        class B extends A implements C,D,E{}
    인터페이스 한정 다중 상속 가능 (어차피 구현 안되니)
        interface A extends X,Y,Z{}

3. 인터페이스의 역할
    1)클래스나 프로그램이 제공하는 기능 스펙을 명시적으로 선언하는 용도
    2)일종의 클라이언트 코드와의 약속
    3)클래스나 프로그램이 제공하는 명세 specification
    4)클라이언트 프로그램은 인터페이스에서 선언된 메서드 명세만 보고 이를 구현하는 클래스를 사용할 수 있음
    5) 인터페이스를 구현한 다양한 객체를 사용함 (다형성 polymorphism)

4. 인터페이스의 요소
    상수
        모든 변수는 상수    public static final
    메서드
        모든 메서드는 추상 public abstract
    default(java8부터)
        구현부를 가지는 메서드
        인터페이스를 구현하는 클래스들에서 공통으로 사용 가능하다.
        default 명시 해줘야 함
        기존 인터페이스에 새로운 기능을 추가할 수 있음.
        구현하는 클래스에서 재정의 할 수 있다.
    정적 메서드(8이후)
        객체 생성과는 상관없음
    private 메서드 (9이후)
        내부에서 사용하기 위함
        디폴트나 스태틱 메서드에서 사용

5. 여러 인터페이스 구현하기 인터페이스 간의 상속
        여러 인터페이스 구현하기   
            자바의 인터페이스는 구현코드가 없으니 하나의 클래스가 여러 인터페이스를 구현할 수 있음.
            디폴트 메서드는 (구현 코드가 있으니) 중복이 될 경우 클래스에서 재정의해줘야 한다
        인터페이스간 '상속'
            extends 다중 상속 (구현체가 없어서)
            구현코드의 상속이 아니고 타입 상속이라고 함
        클래스 상속과 인터페이스 구현 함께 사용
            프레임워크와 오픈소스를 함께 연동되는 구현을 하게 됨
                클래스상속과 인터페이스 구현을 함께 사용하는 경우가 잦음





                stack 선입 후출
                queue 선입 선출





    DAO data access object
    data에 접근위한 객체
    접근을 위한 로직과 비즈니스 로직을 분리하기 위해 사용
    자신이 필요한 인터페이스를 dao에 던지고 dao는 이 인터페이스를 구현한 객체를 사용자에게 편리하게 사용할 수 있게 반환
    보통 db와 연결할 커넥션까지 설정해둠

    DTO data transfer object
    계층간 데이터 교환을 위한 자바 빈즈

    db 레코드의 데이터를 매핑하기 위한 데이터 객체.
    보통 로직을 가지고 있지 않고 data와 getter setter만 가지고 있음

    VO value object
    DTO와 혼용해서 쓰임.
    vo는 값 오브젝트로, 불변의 성격 


        자바 빈즈
        반복적으로 코드를 따로 작성하여 재사용하기 위해 만들어진 클래스 (컴포넌트라고도 함)
        빈은 속성과 메서드로 이루어져 있으며, 데이터의 처리를 담당
            특정한 정보 (id, pw 등등)등을 가지고 있는 클래스를 표현하는 규칙. 데이터를 표현하기 위한 목적을 지니고 있다.
            Java Bean의 규약

            반드시 클래스는 패키지화 되어야 함
            멤버변수는 property(프로퍼티)라고 함
            멤버변수는 private로 지정하고, 외부접근을 위한 get, set 메소드를 정의해야 함
            get, set 메소드는 public으로 지정
            boolean일땐 is 쓰기도 함

