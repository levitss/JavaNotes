0. 자료 구조
    1. 대량 데이터를 효율적으로 관리하는 메커니즘
        -우편 번호
        -인사지원부를 통한 인원 관리

1. (1차원)배열
    1)동일한 자료형 여러개 저장할 수 있는 자료 구조
    2)동일한 자료형의 순차적 자료구조
    3) 자료를 순차적으로 한꺼번에 관리하는 방법 제공
    4)물리적 위치와 논리적 위치가 동일
    5)배열의 순서는 0부터 시작
    6)자바에서 객체 배열을 구현한 Arraylist 를 많이 사용
    7)배열 문제점
        -저장할 수 있는 객체 수가 배열을 생성할 때 결정 (정적)
        -불특정 다수의 개겣를 저장하기에는 문제점이 있음(타입이 지정됨)

2. 배열 선언과 초기화
    1) 자료 한개를 저장하는 공간을 위한 변수 사용
    int num=0;
    2) int [] num=new int [i]; 0<1<n
    c++에서 온거라서
    int num [] ~~~으로도 가능
    num [2]=3번째 값.

    기본자로형 배열
    객체의 배열
        Test t []=new Test[4];
        t[0]=new Test();
    [] 인덱스 연산자 활용
        배열 요소가 저장된 메모리의 위치를 연산하여 찾아줌
    배열의 길이와 요소의 개수는 일치하지 않는다.
        배열을 선언하면 개수만큼 메모리가 할당되지만 실제 요소가 없는 경우도 있음.
        length만 신뢰해서는 안된다. 따로 count 해서 적용.

    
    

3. 향상된 for문 
    1)배열의 n개 요소를 0부터 n-1까지 순차적으로 순회할 때 더 간단히 사용.

    for (변수 : 배열){}
    배열에서 변수로 하나씩 옮기는 작업이라 보면 됨.


4. main()의 매개변수
    1)개발자가 직접 호출하는 메서드는 아님. 
    2)jvm이 프로그램을 실행할 때 불리는 메서드임.
    java클래스로 프로그램을 실행하면 jvm은 길이가 0인 String 배열을 먼저 생성하고 main()메소드를 호출할 때 매개값으로 전달함.

5. 객체 배열 복사하기
public static void arraycopy(Object src,
                             int srcPos,
                            Object dest,
                            int destPos,
                            int length)
    얕은 복사
        객체 주소값만 복사해줌
        즉 한쪽의 요소를 수정하면 반대쪽도 같이 수정이 됨. 같은 주소니까
        
